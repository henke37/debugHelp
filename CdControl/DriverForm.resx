<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="listIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="listIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADy
        BwAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAVkBdgGCAaEDJwE+BAADFwEdAYMCggGeAU8CTQGdBAADCwEPJAABNQEy
        ATABTgF3AWEBQgHLAUsBQwE6AZ4DDQERqAABagGSAaABugGBAdMB8wH/AkUBRAF5AZwBmwGaAfEB7QLs
        Af8D/gH/AVIBlAGrAf8BbAGwAcoB/wF7AckB6QH/AUIBSwFQAZoDIAEwGAABwQGMATEB9wHLAYQBCgH/
        AcEBeQENAf8BugFyAQUB/wHdAZEBKQH/AXMBWQE7AdKgAAFqAaABtwHdAXkBxAHkAf8BdwHJAewB/wGf
        AZkBlgH/Aa4CrAH/AeoB6QHoBf8BTgGOAaQB/wFoAakBwgH/AaABzgHfAf8BSQFXAVsBpwMoAUEDBgEI
        FAAB9wHIAWQB/wHdAZYBFgH/AdUBjgEVAf8BzgGFARAB/wHGAXsBCwH/Ac8BfgEPAf8DKwFDnAABcQG8
        AdkB/wF6AcgB5wH/AXkBzQHwAf8BnAGVAZMB/wG2AbQBswH/AeEC3wL/Af0B/AH/AVEBkAGmAf8BaQGr
        AcQB/wGcAdYB7wH/AUoBWAFeAaQDIgE0AyABMRQAAfwB1gFnAf8B6QGrASoB/wHhAZ0BGwH/AdoBlQEY
        Af8B0gGLARIB/wHSAYQBDQH/AUYBQQE6AXKcAAF3AcEB4AH/AX4BzQHtAf8BfAHRAfUB/wGcAZUBkwH/
        AbcBtQG0Af8B+QH4AfcB/wH4AfYB9QH/AVMBkQGpAf8BawGsAccB/wGnAeEB+QH/AUgBVAFZAZUDDwEU
        AwoBDRQAAaQBfwFJAdAB/AHJAVQB/wHsAbMBQQH/AeMBnQEQAf8B2wGTAQ8B/wHiAZYBDwH/AUgBQQE5
        AXABHgEcARoBJQMDAQSUAAF7AcYB5gH/AYEBzwHxAf8BgAHVAfoB/wGdAZIBjgH/AZIBkAGPAf8BxgHF
        AcQB/wHsAeoB6QH/AVYBlgGsAf8BbQGvAckB/wGCAdIB8gH/AUgBVwFdAY0gAAFUAUoBPgFoAcIBkwFK
        AecB4AGuAVQB/wGvAYgBSAHVAeYBqgE+Af0BQgE+ATkBcQIMAQsBDwH/AbYBXwH/lAABgAHMAewB/wGE
        AdQB9gH/AYQB1QH3Af8BdAG5AdYB/wGTAY8BjQH/AbQBsgGxAf8B6wHoAecB/wFYAZcBsQH/AW8BsAHM
        Af8BdAG4AdYB8TQAAdwBngEyAf8BRgFAATkBcQQAAcEBhQE4AegDLQFOkAABggHQAfAB/wGGAdgB+gH/
        AYYB2QH7Af8BgwHHAeEB/wGXAZMBkQH/Ab8BvQG8Af8B7AHpAegB/wFcAZsBswH/AXIBtAHOAf8BYwGZ
        Aa4B5DQAAdwBoAE3Af8BRwFAATkBcQQAAX0BYAE+Aa4BSQE+ATQBqZAAAYUB1AH1Af8BiQHdAv8BiAHe
        Av8BigHQAegB/wGRAY4BjAH/Ab8BvQG8Af8B7QHqAekB/wFdAZ4BtQH/AXMBtgHRAf8BZgGcAbEB4jQA
        AdwBoAE5Af8BRQFAATkBcQQAAX0BXgE+Aa0BSAE8ATIBrZAAAYcB1wH4Af8BjAHfAv8BiwHfAv8BkAHW
        AewB/wGeAZkBmAH/AbwBugG5Af8B7QHqAekB/wFgAaEBuAH/AXYBuAHSAf8BaAGfAbMB3zQAAdwBoAE+
        Af8BRgFAATgBcQQAAeIBkwEbAfYDKgFFkAABiwHcAfwB/wGPAeQC/wGNAeQC/wGUAdwB8QH/Ab0BuAG2
        Af8B2gLXAf8B/QH6AfgB/wFgAaEBuAH/AXUBuAHSAf8BbAGiAbcB3DQAAdwBnQE+Af8BLwIuAVMBbwFX
        AToBlQH/AcoBFgH/lAABjQHgAv8BkQHoAv8BkAHoAv8BmAHfAfQB/wG8ArcB/wHUAdEB0AH/AekB5QHj
        Af8BXwGfAbYB/wF0AbYB0QH/AW8BowG4Adk0AAHXAaABVwH/Ae8BrQFRAv8B0QFdAf8BTAFCATkBcZQA
        AY8B4wL/AZQB6wL/AZEB6gL/AZkB4AH0Af8B7AHmAeMC/wH+Af0F/wFkAaUBvQH/AZUB3AH4Af8BcAGm
        AbwB1zQAAdUBmwFQAf8B8gGzAV8B/wF9AWIBRAGdmAABkgHnAv8BlwHvAv8BjQHoAf4B/wGkAeUB/An/
        AeQB+AL/AZIB3gH9Af8BhwHaAfsB/wF2Aa4BwwHbNAAB1AGbAU4B/wGpAXwBQgHdnAABigHjAfwB/wGj
        Ae4B/QH/AewB+AH+Af8BrQHiAfsB/wF+AdUB+QH/AXwB1QH6Af8BhAHTAfIB+QFzAaMBtwHBAVgBbQF2
        AYIDCQEMNAAB5gGuAVcB/6AAAWoBqAHDAfIBXAF2AX4BkQEbAh0BI+wAAUIBTQE+BwABPgMAASgDAAFA
        AwABEAMAAQEBAAEBBQABgBcAA/8BAAHyAS8B+AF/BAAB4AEDAfABPwQAAcABAQHwAR8EAAHAAQEB8AEf
        BAABwAEBAfABBwQAAcABBwH4AQcEAAHAAQ8B/wGTBAABwAEPAf8BkwQAAcABDwH/AZMEAAHAAQ8B/wGT
        BAABwAEPAf8BhwQAAcABDwH/AYcEAAHAAQ8B/wGPBAABwAEPAf8BnwQAAcABDwH/Ab8EAAHHA/8EAAs=
</value>
  </data>
</root>