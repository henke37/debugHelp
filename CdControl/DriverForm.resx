<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="listIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="listIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADa
        BwAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAVQBYAFkAaEDKQE+BAADFQEdA2MBngFQAk8BnQQAAwsBDyQAAzEBTgFu
        AV4BTAHLAU0BSwFHAZ4DDQERqAABYgF3AX8BugGBAdMB8wH/A0QBeQOVAfEB7QLsAf8D/gH/AVEBlAGr
        Af8BawGwAcoB/wF6AckB6QH/AUoBTgFQAZoDIQEwGAABvAGKATMB9wHLAYQBCQH/AcEBeAEMAf8BugFx
        AQQB/wHdAZEBKAH/AW0BWQFGAdKgAAFnAZEBogHdAXgBxAHkAf8BdgHJAewB/wGfAZkBlgH/Aa4CrAH/
        AeoB6QHoBf8BTQGOAaQB/wFnAakBwgH/AaABzgHfAf8BTgFVAVcBpwMqAUEDBgEIFAAB9wHIAWMB/wHd
        AZYBFQH/AdUBjgEUAf8BzgGFAQ8B/wHGAXoBCgH/Ac8BfQEOAf8DKwFDnAABcAG8AdkB/wF5AcgB5wH/
        AXgBzQHwAf8BnAGVAZMB/wG2AbQBswH/AeEC3wL/Af0B/AH/AVABkAGmAf8BaAGrAcQB/wGcAdYB7wH/
        AU4BVQFXAaQDIwE0AyEBMRQAAfwB1gFmAf8B6QGrASkB/wHhAZ0BGgH/AdoBlQEXAf8B0gGLAREB/wHS
        AYQBDAH/AUIBQQFAAXKcAAF2AcEB4AH/AX0BzQHtAf8BewHRAfUB/wGcAZUBkwH/AbcBtQG0Af8B+QH4
        AfcB/wH4AfYB9QH/AVIBkQGpAf8BagGsAccB/wGnAeEB+QH/AUsBTwFRAZUDDwEUAwoBDRQAAY0BdQFQ
        AdAB/AHJAVMB/wHsAbMBQAH/AeMBnQEPAf8B2wGTAQ4B/wHiAZYBDgH/AUIBQAE/AXADGgElAwMBBJQA
        AXoBxgHmAf8BgQHPAfEB/wGAAdUB+gH/AZ0BkgGOAf8BkgGQAY8B/wHGAcUBxAH/AewB6gHpAf8BVQGW
        AawB/wFsAa8ByQH/AYIB0gHyAf8BSgFOAVABjSAAAUEBPwE9AWgBsQGKAU0B5wHgAa4BUwH/AZYBfAFO
        AdUB4wGpAT8B/QJAAT8BcQMLAQ8B/wG2AV4B/5QAAYABzAHsAf8BhAHUAfYB/wGEAdUB9wH/AXMBuQHW
        Af8BkwGPAY0B/wG0AbIBsQH/AesB6AHnAf8BVwGXAbEB/wFuAbABzAH/AXIBsAHJAfE0AAHcAZ4BMQH/
        AUEBQAE/AXEEAAGxAX4BPwHoAzEBTpAAAYIB0AHwAf8BhgHYAfoB/wGGAdkB+wH/AYMBxwHhAf8BlwGT
        AZEB/wG/Ab0BvAH/AewB6QHoAf8BWwGbAbMB/wFxAbQBzgH/AWIBjgGfAeQ0AAHcAaABNgH/AUEBQAE/
        AXEEAAFnAVsBSgGuAU4BSQFFAamQAAGFAdQB9QH/AYkB3QL/AYgB3gL/AYoB0AHoAf8BkQGOAYwB/wG/
        Ab0BvAH/Ae0B6gHpAf8BXAGeAbUB/wFyAbYB0QH/AWQBjwGgAeI0AAHcAaABOAH/AUEBQAE/AXEEAAFo
        AVkBSQGtAU8BSQFEAa2QAAGHAdcB+AH/AYwB3wL/AYsB3wL/AZAB1gHsAf8BngGZAZgB/wG8AboBuQH/
        Ae0B6gHpAf8BXwGhAbgB/wF1AbgB0gH/AWUBjwGgAd80AAHcAaABPQH/AUEBQAE/AXEEAAHYAZABHgH2
        AywBRZAAAYsB3AH8Af8BjwHkAv8BjQHkAv8BlAHcAfEB/wG9AbgBtgH/AdoC1wH/Af0B+gH4Af8BXwGh
        AbgB/wF0AbgB0gH/AWcBkgGhAdw0AAHcAZ0BPQH/AzMBUwFZAVEBRwGVAf8BygEVAf+UAAGNAeAC/wGR
        AegC/wGQAegC/wGYAd8B9AH/AbwCtwH/AdQB0QHQAf8B6QHlAeMB/wFeAZ8BtgH/AXMBtgHRAf8BaQGQ
        AaAB2TQAAdcBoAFWAf8B7wGtAVAC/wHRAVwB/wFDAUABPwFxlAABjwHjAv8BlAHrAv8BkQHqAv8BmQHg
        AfQB/wHsAeYB4wL/Af4B/QX/AWMBpQG9Af8BlQHcAfgB/wFqAZIBogHXNAAB1QGbAU8B/wHyAbMBXgH/
        AWEBVwFLAZ2YAAGSAecC/wGXAe8C/wGNAegB/gH/AaQB5QH8Cf8B5AH4Av8BkgHeAf0B/wGHAdoB+wH/
        AXABmQGpAds0AAHUAZsBTQH/AZcBdQFIAd2cAAGKAeMB/AH/AaMB7gH9Af8B7AH4Af4B/wGtAeIB+wH/
        AX0B1QH5Af8BewHVAfoB/wGDAc0B6gH5AWgBgwGPAcEBSwFRAVMBggMJAQw0AAHmAa4BVgH/oAABaQGg
        AbkB8gFRAVoBXAGRAxkBI+wAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHy
        AS8B+AF/BAAB4AEDAfABPwQAAcABAQHwAR8EAAHAAQEB8AEfBAABwAEBAfABBwQAAcABBwH4AQcEAAHA
        AQ8B/wGTBAABwAEPAf8BkwQAAcABDwH/AZMEAAHAAQ8B/wGTBAABwAEPAf8BhwQAAcABDwH/AYcEAAHA
        AQ8B/wGPBAABwAEPAf8BnwQAAcABDwH/Ab8EAAHHA/8EAAs=
</value>
  </data>
</root>